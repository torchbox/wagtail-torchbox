# Generated by Django 3.2.13 on 2022-10-12 08:11

from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("taxonomy", "0005_service_contact_reasons"),
        ("images", "0003_alter_customimage_file_hash"),
        ("wagtailcore", "0069_log_entry_jsonfield"),
    ]

    operations = [
        migrations.CreateModel(
            name="PropositionPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "theme",
                    models.CharField(
                        choices=[
                            ("light", "Light"),
                            ("coral", "Coral"),
                            ("dark", "Dark"),
                            ("dark--transparent", "Dark with transparent header"),
                        ],
                        default="light",
                        max_length=255,
                    ),
                ),
                (
                    "strapline",
                    models.CharField(
                        help_text="Words in <span> tag will display in a contrasting colour.",
                        max_length=255,
                    ),
                ),
                ("intro", wagtail.fields.RichTextField(blank=True)),
                (
                    "services_section_title",
                    models.CharField(blank=True, max_length=255),
                ),
                ("services_section_intro", wagtail.fields.RichTextField(blank=True)),
                (
                    "services_section_body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "paragraph",
                                wagtail.blocks.RichTextBlock(
                                    icon="pilcrow",
                                    template="patterns/molecules/streamfield/blocks/paragraph_block.html",
                                ),
                            )
                        ],
                        blank=True,
                        use_json_field=True,
                    ),
                ),
                ("clients_section_title", models.CharField(blank=True, max_length=255)),
                ("clients_section_intro", wagtail.fields.RichTextField(blank=True)),
                (
                    "clients_section_body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "paragraph",
                                wagtail.blocks.RichTextBlock(
                                    icon="pilcrow",
                                    template="patterns/molecules/streamfield/blocks/paragraph_block.html",
                                ),
                            )
                        ],
                        blank=True,
                        use_json_field=True,
                    ),
                ),
                ("team_section_title", models.CharField(blank=True, max_length=255)),
                ("team_section_intro", wagtail.fields.RichTextField(blank=True)),
                (
                    "team_section_body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "paragraph",
                                wagtail.blocks.RichTextBlock(
                                    icon="pilcrow",
                                    template="patterns/molecules/streamfield/blocks/paragraph_block.html",
                                ),
                            )
                        ],
                        blank=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
                (
                    "service",
                    models.OneToOneField(
                        blank=True,
                        help_text="Link to this service in taxonomy",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="taxonomy.service",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
    ]
